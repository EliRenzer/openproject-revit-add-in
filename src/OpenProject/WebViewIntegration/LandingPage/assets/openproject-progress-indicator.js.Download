/**
 * Created by Marco Moscher <marco@zzmedia.net>
 */

jQuery.fn.isInView = function(){

    var win = jQuery(window);

    var viewport = {
        top : win.scrollTop(),
        left : win.scrollLeft()
    };
    viewport.right = viewport.left + win.width();
    viewport.bottom = viewport.top + win.height();

    var bounds = this.offset();
    bounds.right = bounds.left + this.outerWidth();
    bounds.bottom = bounds.top + this.outerHeight();

    return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));

};

jQuery(document).ready(function() {

    var _progressBarWrapper = {};
    if( typeof(ProgressBar) == "undefined" ) {
        _progressBarWrapper = window.ProgressBar;
    }else{
        _progressBarWrapper = ProgressBar;
    }

    var progressElementsToAnimate = [];

    var optionDefaults = {
        type: "circle",
        progress: 0.75,
        activecolor: "#7493ab",
        inactivecolor: "#7393ab",
        thickness : 7,
        animation: "easeIn"
    };

    function get_options_form_data_attributes( element ) {
        var options = {};
        options['type'] = element.attr('data-type');
        options['progress'] = parseFloat(element.attr('data-progress'));
        options['activecolor'] = element.attr('data-activecolor');
        options['inactivecolor'] = element.attr('data-inactivecolor');
        options['thickness'] = element.attr('data-thickness');
        options['hasicon'] = JSON.parse(element.attr('data-hasicon'));
        options['animate'] = element.attr('data-animate');
        return options;
    }

    function initialize_progress_bar( element, options, containerWrapper ){

        var pOptions ={
            strokeWidth: options.thickness,
            duration: 1400,
            color: options.activecolor,
            trailColor: options.inactivecolor,
            trailWidth: options.thickness,
            svgStyle: null
        };

        if( options.hasicon ) {
            var iconHtml = containerWrapper.find('.oo-progress-indicator-icon').first().html();
            pOptions['text'] = {
                value: iconHtml
            }
        }

        if( options.animate != "none" ) {
            pOptions['easing'] = options.animate;
        }
        
        var progressFn = {};
        if( options.type == "semicircle" ) {
            progressFn = new _progressBarWrapper.SemiCircle(element, pOptions);
        }else if( options.type == "line" ) {
            progressFn = new _progressBarWrapper.Line(element, pOptions);
        }else{
            progressFn = new _progressBarWrapper.Circle(element, pOptions);
        }

        if( options.animate == "none") {
            progressFn.set( options.progress );
        }else{
           register_animate_on_view(element, function() {
               progressFn.animate( options.progress );
           });
        }
    }

    function register_animate_on_view( element, animateFn ) {
        progressElementsToAnimate.push({
                element: element,
                callback: animateFn
        });
    }

    function check_progress_indicators_in_view() {
        for(var i = 0; i < progressElementsToAnimate.length; i++ ) {
            if( jQuery(progressElementsToAnimate[i].element).isInView() ){
                (progressElementsToAnimate[i].callback)();
                progressElementsToAnimate.splice(i,1);
            }
        }
    }

    jQuery('.oo-progress-indicator--wrapper').each( function( idx ) {
        var extractedOptions = get_options_form_data_attributes( jQuery(this) );
        //register
        var container = jQuery(this).find('.oo-progress-indicator').first();

        container.attr('id', 'oo-progress-indicator--' + (idx+5) );

        initialize_progress_bar( '#' + container.attr('id'), extractedOptions, jQuery(this) );
    });

    //once init
    check_progress_indicators_in_view();

    //hook to scroll
    jQuery(window).scroll(function() {
        //console.log("To Animate " + progressElementsToAnimate.length );
        check_progress_indicators_in_view();
    });

    //smooth scrolling for links
    jQuery(window).on('hashchange', function(e) {
        e.preventDefault();
        if( window.location.hash.substring(0,4) == "#op-" ){
            var _id = "#" + window.location.hash.substring(4);
            //console.log("Scroll to ID: " + _id );
            window.location.hash = _id;
           /* if( jQuery(_id).length > 0 ) {
                console.log( jQuery( _id ).position().top );
                jQuery('html, body').stop().animate({scrollTop: jQuery( _id ).position().top }, 500);
                window.location.hash = _id;
            }*/
        }
    });

});